<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  
  <!-- The Basics -->
  <groupId>com.nus.teammates</groupId>
  <artifactId>teammates</artifactId>
  <version>v4</version>
  <packaging>war</packaging>
  <name>teammates</name>
  
  <dependencies>
  
    <!-- JavaMail -->
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.4.4</version>
       <scope>test</scope>
    </dependency>
  
    <!-- Google App Engine meta-package -->
    <dependency>
      <groupId>net.kindleit</groupId>
      <artifactId>gae-runtime</artifactId>
      <version>${gae.version}</version>
      <type>pom</type>
    </dependency>
    
    <dependency>
      <groupId>org.datanucleus</groupId>
      <artifactId>datanucleus-core</artifactId>
      <version>${datanucleus.version}</version>
      <scope>runtime</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.transaction</groupId>
      <artifactId>jta</artifactId>
      <version>1.1</version>
    </dependency>

    <!--
     J2EE Servlet API. We need it to compile IndexServlet class. You can
     probably remove it, if you don't explicitly use Servlets
     -->
    <dependency>
      <groupId>org.apache.geronimo.specs</groupId>
      <artifactId>geronimo-servlet_2.5_spec</artifactId>
      <version>1.2</version>
      <scope>provided</scope>
    </dependency>
    
    <!--
     Make use of JSP tags. Remove, if you don't use JSPs
     -->
    <dependency>
      <artifactId>standard</artifactId>
      <groupId>taglibs</groupId>
      <version>1.1.2</version>
      <type>jar</type>
      <scope>runtime</scope>
    </dependency>
    
    <!-- what is the purpose of this jar? -damith -->
    
    <dependency>
      <groupId>net.java.dev.jna</groupId>
      <artifactId>jna</artifactId>
      <version>3.3.0</version>
    </dependency>
    
    <!-- These dependencies are here just for enabling logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>
    
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>0.9.24</version>
    </dependency>
    
    <!-- Test scope -->

   
    <dependency>
      <groupId>com.googlecode.jmockit</groupId>
      <artifactId>jmockit</artifactId>
      <version>0.999.13</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.10</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15</artifactId>
      <version>1.38</version>
    </dependency>

    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-server</artifactId>
      <version>2.21.0</version>
       <scope>test</scope>
    </dependency>

  <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>10.0.1</version>
  </dependency>
    
    <!--  Gson: Java to Json conversion -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.1</version>
      <scope>compile</scope>
    </dependency>
    
    <!--
     GAE libraries for local testing as described here:
     http://code.google.com/appengine/docs/java/howto/unittesting.html
     -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-labs</artifactId>
      <version>1.6.4</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-stubs</artifactId>
      <version>1.6.4</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-testing</artifactId>
      <version>1.6.4</version>
      <scope>test</scope>
    </dependency>
    
    <dependency>
      <groupId>javax.jdo</groupId>
      <artifactId>jdo2-api</artifactId>
      <version>2.3-eb</version>
      <exclusions>
        <exclusion>
          <groupId>javax.transaction</groupId>
          <artifactId>transaction-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>
  <repositories>
    <!-- Spring releases -->
    <repository>
      <id>maven2</id>
      <url>http://repo1.maven.org/maven2</url>
    </repository>
  </repositories>
  
  <build>
    <plugins>
      <!--
       This plug-in "enhances" your domain model objects (i.e. makes them
       persistent for datanucleus)
       -->
      <plugin>
        <groupId>org.datanucleus</groupId>
        <artifactId>maven-datanucleus-plugin</artifactId>
        <version>1.1.4</version>
        <configuration>
          <!--
           Make sure this path contains your persistent classes!
           -->
          <mappingIncludes>
              **/jdo/*.class
          </mappingIncludes>
          <verbose>true</verbose>
          <enhancerName>ASM</enhancerName>
          <api>JDO</api>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>enhance</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-core</artifactId>
            <version>${datanucleus.version}</version>
            <exclusions>
              <exclusion>
                <groupId>javax.transaction</groupId>
                <artifactId>transaction-api</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-rdbms</artifactId>
            <version>${datanucleus.version}</version>
          </dependency>
          <dependency>
            <groupId>org.datanucleus</groupId>
            <artifactId>datanucleus-enhancer</artifactId>
            <version>1.1.4</version>
          </dependency>
          <dependency>
            <groupId>javax.jdo</groupId>
            <artifactId>jdo2-api</artifactId>
            <version>2.3-ec</version>
            <scope>runtime</scope>
          </dependency>

        </dependencies>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <filtering>true</filtering>
              <includes>
                <include>**/appengine-web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      
      <!--
       The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
       gae:deploy" to upload to GAE.
       -->
      <plugin>
        <groupId>net.kindleit</groupId>
        <artifactId>maven-gae-plugin</artifactId>
        <version>0.9.1</version>
        <dependencies>
          <dependency>
            <groupId>net.kindleit</groupId>
            <artifactId>gae-runtime</artifactId>
            <version>${gae.version}</version>
            <type>pom</type>
          </dependency>

        </dependencies>
        <configuration>

			<port>${port}</port>
        </configuration>
        <executions>
          <execution>
            <id>pre-integration-test</id>
			<phase>pre-integration-test</phase>
            <goals>
              	<goal>update</goal>
            </goals>
            <configuration>
				<passin>true</passin>
				<emailAccount>${email}</emailAccount>
            </configuration>
           </execution>
          </executions>
      </plugin>
      
      <!--
       Upload application to the appspot automatically, during
       release:perform
       
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <configuration>
          <goals>gae:deploy</goals>
        </configuration>
      </plugin>
      -->
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <!-- overwrite appengine-web-app with -Dversion option-->
            <id>process-sources</id>
            <phase>process-sources</phase>
            <configuration>
              <target name='changeVersion' if='ver'>
                  <xmlproperty file="${prop.appengine.xml.dir}/appengine-web.xml"/>
                <property name="appID" value="${appengine-web-app.application}"/>
                  <copy file="${prop.appengine.xml.dir}/appengine-web.template.xml" 
					tofile="${prop.appengine.xml.dir}/appengine-web.xml" overwrite='true'>
                  <filterset begintoken='@' endtoken='@'>
                    <filter token="VERSION" value="${ver}"/>
                    <filter token="APPLICATION" value="${appID}"/>
                  </filterset>
                </copy>     
                <echo message='------Overwrite appengin-web-app.xml-------'/>
                <echo message='Application : ${appengine-web-app.application}'/>
                <echo message='Version     : ${ver}'/>
              </target>

            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

		<execution>
		 <!-- overwrite appengine-web-app with -Dapp option-->
            <id>process-sources2</id>
            <phase>process-sources</phase>
            <configuration>
              <target if='app'>
                  <xmlproperty file="${prop.appengine.xml.dir}/appengine-web.xml"/>
                <property name="appVersion" value="${appengine-web-app.version}"/>
                  <copy file="${prop.appengine.xml.dir}/appengine-web.template.xml" 
						tofile="${prop.appengine.xml.dir}/appengine-web.xml" overwrite='true'>
                  <filterset begintoken='@' endtoken='@'>
                    <filter token="VERSION" value="${appVersion}"/>
                    <filter token="APPLICATION" value="${appId}"/>
                  </filterset>
                </copy>  
				<propertyfile file="${prop.build.dir}">
          <entry key="app.account" value="${email}"/>
					<entry key="app.url" value="${appId}.appspot.com"/>
					<entry key="app.id" value="${appId}"/>
				</propertyfile> 
				<propertyfile file="${prop.test.dir}">
          <entry key="test.app.url" value="http://${appId}.appspot.com/"/>
					<entry key="test.app.id" value="${appId}"/>
				</propertyfile>
                <echo message='------Overwrite appengin-web-app.xml-------'/>
                <echo message='Application : ${appengine-web-app.application}'/>
                <echo message='Version     : ${appVersion}'/>
              </target>

            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <!-- overwrite test.properties -->
          <execution>
            <id>process-sources-3</id>
            <phase>process-sources</phase>
            <configuration>
              <target >
                <xmlproperty file="${prop.appengine.xml.dir}/appengine-web.xml"/>
                <property name="appVersion" value="${appengine-web-app.version}"/>
                <property name="appID" value="${appengine-web-app.application}"/>
        <propertyfile file="${prop.test.dir}">
          <!--entry key="test.app.url" value="http://${appVersion}.${appID}.appspot.com/"/-->
          <!-- temp hack by damith, to facilitate local testing -->
          <entry key="test.app.url" value="http://localhost:8080/"/>
        </propertyfile>
              </target>

            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <configuration>
                <target>
                  <xmlproperty file="pom.xml"/>
                  <property name = "sdk.dir" value="${settings.localRepository}/com/google/appengine/appengine-java-sdk/${project.properties.gae.version}/appengine-java-sdk-${project.properties.gae.version}/bin"/>
                  <echo message="maven local repo: ${settings.localRepository}"/>  
                  <echo message="gae version     :${project.properties.gae.version}"/>  
                  <echo message="gae dir         : ${sdk.dir}"/>

                <xmlproperty file="src/main/webapp/WEB-INF/appengine-web.xml"/>                
                <property file="${prop.build.dir}"/>
                <property file="${prop.test.dir}"/>
                  
                  <tstamp>
                    <format property="reportTimeStamp" pattern="EEE_d_MMM_yyyy_HH_mm"/>
                  </tstamp>

                  <property file="${prop.build.dir}"/>
                  <property file="${prop.test.dir}"/>
                  <xmlproperty file="src/main/webapp/WEB-INF/appengine-web.xml"/>   
                  <echo file ="report/${reportTimeStamp}/deployreport.txt">
                    ${reportTimeStamp}
                    deployed version    :${appengine-web-app.version}
                    app id              :${appengine-web-app.application}
                    app account         :${app.account}
                    api auth code       :${api.authCode}
                  </echo> 
                  <copy file="${prop.build.dir}" tofile="report/${reportTimeStamp}/build.properties.backup"/>
                  <copy file="${prop.test.dir}" tofile="report/${reportTimeStamp}/test.properties.backup"/> 

               
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>pre-integration-test-2</id>
            <phase>pre-integration-test</phase>
            <configuration>
                <target>
                  <xmlproperty file="pom.xml"/>
                  <property name = "sdk.dir" value="${settings.localRepository}/com/google/appengine/appengine-java-sdk/${project.properties.gae.version}/appengine-java-sdk-${project.properties.gae.version}/bin"/>

                <exec dir="${sdk.dir}/" executable="chmod" osfamily='unix' failonerror='true'>
                    <arg line="+x appcfg.sh"/>
                </exec> 
                <exec executable="sh"  dir="${sdk.dir}/" osfamily='unix' failonerror='true'>  
                  <arg line="appcfg.sh set_default_version ${project.basedir}/src/main/webapp" />  
                </exec>
                <exec executable="cmd"  dir="${sdk.dir}/" osfamily='windows' failonerror='true'>  
                  <arg line="/c appcfg.cmd set_default_version ${project.basedir}/src/main/webapp" />  
                </exec>     
              </target>
              <skip>${skipSetDefault}</skip>  
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>  
          
           <execution>
              <id>package</id>
              <phase>package</phase>
              <configuration>
                <target  name ="change_authCode">
                  <tstamp>
                    <format property="timeStamp" pattern="ssSSS"/>
                  </tstamp>
                  <echo message="${timeStamp}"/>
                  <propertyfile file="${prop.build.dir}">
                    <entry key="api.authCode" value="${timeStamp}" />
                  </propertyfile>
                  <propertyfile file="${prop.test.dir}">
                    <entry key="test.app.authCode" value="${timeStamp}" />
                  </propertyfile>
                  <copy file="${prop.test.dir}" tofile="${prop.test.target.dir}"/>
                </target>
            <skip>${skipApiCode}</skip>  
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution> 
          </executions>
      </plugin>
      

      
      
      <!-- Java compiler version -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <!-- doesn't need any more
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>selenium-maven-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start-server</goal>
            </goals>
            <configuration>
              <background>true</background>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.11</version>
        <configuration>
          <!-- Skip the normal tests, we'll run them in the integration-test phase -->
          
          <!-- defaul test class to run in integratin-test phase -->
            <includes>
              <include>**/TestSuiteRun.class</include>
            </includes>
          <skip>true</skip>
        </configuration>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skip>false</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>

    </plugins>
  </build>
  
  <!-- Specify hard-coded project properties here -->
  <properties>
    
    <!-- Sets the project's default encoding.
     http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <!--
     This is just for "eclipse:eclipse" goal to always attempt downloading
     sources
     -->
    <downloadSources>true</downloadSources>
    
    <!--
     Specify AppEngine version for your project. It should match SDK
     version pointed to by ${gae.home} property (Typically, one used by
     your Eclipse plug-in)
     -->
    <gae.version>1.6.4</gae.version>

	<prop.build.dir>src/main/webapp/WEB-INF/classes/build.properties</prop.build.dir>
	<prop.build.target.dir>target/teammates-${project.version}/WEB-INF/classes/build.properties/</prop.build.target.dir>
	<prop.test.dir>src/test/resources/test.properties</prop.test.dir>
	<prop.test.target.dir>target/test-classes/test.properties</prop.test.target.dir>
	<prop.appengine.xml.dir>src/main/webapp/WEB-INF</prop.appengine.xml.dir>

    <!--
    Default emailAccount, set to null so it will use the cookies if not use -Demail or -Dapp
    -->	
	<email></email>
     <!--
     Default local port
     -->	
	<port>8080</port>
     <!--
     Skip changing the authenciation code by default
     -->   
    <skipApiCode>true</skipApiCode>
     <!--
      Set the version as default
     -->  
    <skipSetDefault>true</skipSetDefault>

    <datanucleus.version>1.1.5</datanucleus.version>
    
    <!--
     Upload to http://test.latest.<applicationName>.appspot.com by default
    
    <gae.application.version>test</gae.application.version>
     -->
  </properties>
  
  <profiles>
    <!--
		
     -->
    <profile>
      	<id>teammates-james</id>
	 	<activation>
        	<property>
          		<name>app</name>
          		<value>teammates-james</value>
        	</property>
      </activation>
      <properties>
		<email>damtuanlong@gmail.com</email>
		<appId>teammates-james</appId>
      </properties>
    </profile>

    <profile>
        <id>xlteammates</id>
    <activation>
          <property>
              <name>app</name>
              <value>xlteammates</value>
          </property>
      </activation>
      <properties>
    <email>xialin.z21@gmail.com</email>
    <appId>xlteammates</appId>
      </properties>
    </profile>

    <profile>
        <id>teammatesv4</id>
    <activation>
          <property>
              <name>app</name>
              <value>teammatesv4</value>
          </property>
      </activation>
      <properties>
    <email>teammates@comp.nus.edu.sg</email>
    <appId>teammatesv4</appId>
      </properties>
    </profile>

    <profile>
        <id>teammates-kalpit</id>
    <activation>
          <property>
              <name>app</name>
              <value>teammates-kalpit</value>
          </property>
      </activation>
      <properties>
    <email>kalpitjain03@gmail.com</email>
    <appId>teammates-kalpit</appId>
      </properties>
    </profile>
	
  </profiles>
  
</project>